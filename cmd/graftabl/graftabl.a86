; Copyright 2022 S. V. Nickolas.
;
; Permission is hereby granted, free of charge, to any person obtaining a copy 
; of this software and associated documentation files (the "Software"), to 
; deal with the Software without restriction, including without limitation the 
; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
; sell copies of the Software, and to permit persons to whom the Software is 
; furnished to do so, subject to the following conditions:
;
;   1. Redistributions of source code must retain the above copyright notice, 
;      this list of conditions and the following disclaimers.
;   2. Redistributions in binary form must reproduce the above copyright 
;      notice, this list of conditions and the following disclaimers in the 
;      documentation and/or other materials provided with the distribution.
;   3. The name of the author may not be used to endorse or promote products 
;      derived from this Software without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED 
; WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  
;
; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
; WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
; OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

; Revision History:
;
;    07/11/2022  usotsuki
;                Initial version.
;
;    07/11/2022  usotsuki (2)
;                Reduce memory footprint
;
;    07/12/2022  usotsuki
;                Additional documentation/comments
;
;    07/12/2022  usotsuki (2)
;                Fine tuning
;
;    07/12/2022  usotsuki (3)
;                Moved CP437 data around to save disk footprint.
;                Optimized resident portion and close all handles before going
;                  resident, suggested by C. Masloch
;                Removed some redundant segment escapes.

; ============================================================================
; WARNING: Do not use MS-DOS's GRAFTABL to try to update the charset buffer of
;          DOSLITE GRAFTABL.  It will fail (lock the system).  Also, MS-DOS's
;          GRAFTABL will not detect the codepage in our GRAFTABL, although we
;          will detect it in theirs.
; ============================================================================

; This is GRAFTABL, a tool for loading the necessary data to render characters
; $80-FF in graphics mode on a CGA.  (Yes, it's that specific.  If you need
; this support for anything else, that is what DISPLAY.SYS is for.)
;
; Technically we could have probably gotten away with only supporting codepage
; 437 - the ROM codepage - but we instead support all the codepages of MS-DOS
; 5 and 6.  This does not affect our resident footprint; only the size of the
; generated binary, because the data is held in the transient portion of the
; file.
;
; If there are questions about the legality of the data, feel free to replace
; it; I believe it does not qualify for copyright under United States law
; (font data is, as far as I know, only copyrightable in the form of vectors)
; but it WAS extracted from a Microsoft CPI, probably that of Windows 95, many
; years ago (2000, to be precise).
;
; Syntax: GRAFTABL [codepage]
;         GRAFTABL /STA[TUS]
;
; If no codepage is specified, 437 is assumed.
; Only three characters of the switch /STATUS are significant, so you could
; type /STATUS, /STA, or /STANDINTHEPLACEWHEREYOUWERE with the same result.
;
; Assemble with NASM using default settings.
; Use the switch -DHELP to assemble in command-line help (adds a small amount
; of heft to the transient portion).

          cpu       8086
          org       0x0100

; ============================================================================
; RESIDENT PORTION OF GRAFTABL (entry is replaced)
; ============================================================================

; Start by jumping over the resident part.
; The entry point doubles as the first 3 bytes of space for the font.
; The 2 bytes following the font are used to store the codepage (used by
; GRAFTABL /STA).

entry:    jmp       trans
CP437     equ       entry               ; See okdos.14 for the missing bytes.
          db                          0xC0, 0xC6, 0x7C, 0x0C, 0x78
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x00, 0x00, 0x7E, 0xC0, 0xC0, 0x7E, 0x0C, 0x38
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0xC6, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x38, 0x6C, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x18, 0x30, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0x18, 0x7E, 0xD8, 0x7E, 0x00
          db        0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x60, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0xFC
          db        0xC6, 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18
          db        0x38, 0x6C, 0x64, 0xF0, 0x60, 0x66, 0xFC, 0x00
          db        0x66, 0x66, 0x3C, 0x7E, 0x18, 0x7E, 0x18, 0x18
          db        0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC7
          db        0x0E, 0x1B, 0x18, 0x3C, 0x18, 0xD8, 0x70, 0x00
          db        0x18, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x76, 0xDC, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x00
          db        0x76, 0xDC, 0x00, 0xE6, 0xF6, 0xDE, 0xCE, 0x00
          db        0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00
          db        0x18, 0x00, 0x18, 0x18, 0x30, 0x63, 0x3E, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00
          db        0x63, 0xE6, 0x6C, 0x7E, 0x33, 0x66, 0xCC, 0x0F
          db        0x63, 0xE6, 0x6C, 0x7A, 0x36, 0x6A, 0xDF, 0x06
          db        0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
          db        0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00
          db        0x78, 0xCC, 0xCC, 0xD8, 0xCC, 0xC6, 0xCC, 0x00
          db        0xFE, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00
          db        0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00
          db        0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00
          db        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0xC0
          db        0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x00
          db        0x7E, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x7E
          db        0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00
          db        0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00
          db        0x0E, 0x18, 0x0C, 0x3E, 0x66, 0x66, 0x3C, 0x00
          db        0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00
          db        0x06, 0x0C, 0x7E, 0xDB, 0xDB, 0x7E, 0x60, 0xC0
          db        0x1E, 0x30, 0x60, 0x7E, 0x60, 0x30, 0x1E, 0x00
          db        0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00
          db        0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00
          db        0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00
          db        0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70
          db        0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00
          db        0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
          db        0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C
          db        0x6C, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x18, 0x30, 0x7C, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

lcp:      dw        0x0000              ; Local codepage.

; New INT2F handler.
; Supports AX=$B000 or $B001.  See RBIL for details.
;
; Some optimizations suggested by C. Masloch.

new2F:    cmp       ah, 0xB0            ; is it ours?
          je        .2
.1:       jmp       0:0
.2:       cmp       al, 1
          ja        .1                  ; >1 - chain
          mov       al, 0xFF            ; needs set for both functions.
          jne       .4                  ; 0 - are we here?
.3:       mov       word [bx], entry    ; 1 - where are we?
          mov       [bx+2], cs
.4:       iret
old2F     equ       .1+1

; ============================================================================
; TRANSIENT PORTION OF GRAFTABL
; ============================================================================

; ============================================================================
; Returns: 0 = Installed successfully
;          1 = Codepage changed
;          2 = No codepage loaded (e.g., by /STA)
;          3 = Syntax error
;          4 = Incorrect DOS version,
;              will not occur on our code.
; ============================================================================

; Beginning of transient portion.
; Make sure the poor sap isn't using MS-DOS 1.  If he is, die screaming.

trans:    mov       ah, 0x30
          int       0x21
          cmp       al, 0x02
          jae       okdos
          mov       dx, edos1
          call      wrstr
          int       0x20                ; DOS 1 EXIT

; Command-line parser.
;
; The command line is stored as a PASCAL string, in the upper half of the Zero
; Page, terminated by a carriage return.  Initial spaces are included.

okdos:    mov       si, 0x0081          ; Start of command line
.1:       call      killspc
          mov       ah, [si]
          cmp       ah, '/'             ; Switch?
          je        .5                  ; Yes, skip forward to process it.
.2:       mov       ah, [si]            ; Read digits.
          cmp       ah, 0x0D            ; CR - end of line
          je        .14
          cmp       ah, '0'             ; If not a digit, die screaming
          jb        .3
          cmp       ah, '9'
          ja        .3
          and       ah, 0x0F            ; Mask off the ASCII
          mov       bl, ah              ; Multiply existing value by 10 and
          xor       bh, bh              ;   add our digit to it.
          mov       ax, 0x000A
          mul       word [codepage]
          add       ax, bx
          mov       [codepage], ax
          inc       si                  ; Next char
          jmp short .2
.3:       mov       dx, esyn            ; Syntax error, die screaming
.4:       call      wrstr
          mov       ax, 0x4C03
          int       0x21                ; EXIT CODE 3
.5:       inc       si                  ; Start reading switch.
%ifdef    HELP
          cmp       byte [si], '?'      ; /? - show command-line help
          jne       .6
          mov       dx, ehelp
          jmp       .4                  ; Treat it as an error condition
%endif
.6:       mov       di, mstatus         ; The switch we need to match.
          mov       bx, si              ; Hold onto the current pointer.
.7:       mov       ah, [si]            ; Next char from each string.
          call      smash
          mov       al, [di]
          or        al, al              ; End of string?
          je        .11                 ; Yes, so do status.
          cmp       ah, al              ; Char match?
          jne       .8                  ; No, so die screaming.
          inc       si                  ; Move up and keep checking.
          inc       di
          jmp short .7
.8:       mov       dx, eswitch         ; "Invalid switch"
          call      wrstr
          mov       si, bx
.9:       mov       ah, [si]            ; Next char of switch
          call      smash
          cmp       ah, ' '             ; Check for delimiters
          je        .10                 ;   (space, tab, CR)
          cmp       ah, 0x09
          je        .10
          cmp       ah, 0x0D
          je        .10
          mov       dl, ah              ; Output the character
          mov       ah, 0x02
          int       0x21
          inc       si                  ; Keep going, until done
          cmp       si, 0x0100
          jb        .9
.10:      mov       dx, ecrlf           ; End with a newline.
          jmp       .4

; /STATUS handler.
;
; If GRAFTABL is not installed, die screaming.
; If it is, get the data pointer from it.  (This is actually the same as the
; INT1F vector on known versions.)  On known versions of GRAFTABL, including
; ours, the actual codepage number is stored immediately after the font data
; (i.e., at pointer+$0400 bytes).

.11:      mov       ax, 0xB000          ; Check for a running instance.
          int       0x2F
          cmp       al, 0xFF            ; Found it?
          je        .12                 ; Yes, jump forward.
          mov       dx, eis             ; Write "GRAFTABL is NOT installed"
          call      wrstr
          mov       dx, enot
          call      wrstr
          jmp short .13                 ; Die
.12:      mov       bx, whence          ; Get location of GRAFTABL data,
          mov       ax, 0xB001          ;   usually same as the 1F vector
          int       0x2F
          mov       dx, eactive
          call      wrstr
          mov       di, [whence]
          mov       ds, [whence+2]
          mov       bx, 0x0400
          mov       ax, ds:[bx+di]
          push      cs                  ; Restore DS
          pop       ds
          call      wrnum               ; Write the codepage in decimal form.
          mov       dx, ecrlf
          call      wrstr
.13:      mov       ax, 0x4C02
          int       0x21                ; EXIT CODE 2

; Codepage mover/resident installer.
; (This serves both purposes, depending on which is needed.)
;
; Note that if we are installing a new GRAFTABL with codepage 437, we do not
; need to do a memory move, except for three bytes, "0x7C, 0xC6, 0xC0".  But
; if we are installing codepage 437 into an existing GRAFTABL, we still need
; to patch these three bytes in BEFORE we copy.  Easier to just copy anyway.
; This destroys the JMP at CS:0100, but we won't be using that again.

.14:      mov       word [0x0100], 0xC67C
          mov       byte [0x0102], 0xC0 ; Patch the missing part of CP437.
                                        ; (Size optimization)
          cmp       word [codepage], 0  ; Default to 437 if no CP specified
          jne       .15
          mov       word [codepage], 437
.15:      mov       si, cptab           ; Check our table to see if we have a
          mov       ax, [codepage]      ;   matching font in the binary.
.16:      cmp       word [si], 0        ; End of table?
          je        .17                 ; Yes, die screaming.
          cmp       ax, [si]            ; A match?
          je        .18                 ; Yes, so use it.
          add       si, 4               ; Next entry
          jmp short .16
.17:      mov       dx, ecp             ; "Invalid codepage"
          jmp       .4
.18:      add       si, 2               ; Get address of font
          mov       ax, [si]
          mov       [cpptr], ax         ; Save it.
          mov       ax, 0xB000          ; Search for existing GRAFTABL
          int       0x2F
          cmp       al, 0xFF            ; Found it.
          je        .22
          or        al, al              ; AL=00?
          jz        .19                 ; Yes, so safe to install.
          mov       dx, enope           ; Not safe to install, die screaming
          call      wrstr
          mov       ax, 0x4C02
          int       0x21                ; EXIT CODE 2
.19:      cmp       word [codepage], 437
          je        .20                 ; No copy needed if codepage is 437.
          mov       word [whence], entry
          mov       [whence+2], cs
          call      movcp               ; Install codepage
.20:      mov       ax, 0x352F          ; GETVECT
          int       0x21
          mov       [old2F], bx
          mov       [old2F+2], es
          mov       ax, 0x252F          ; Hook INT2F
          mov       dx, new2F
          int       0x21
          mov       ax, 0x251F          ; Hook INT1F
          mov       dx, entry           ; Remember, this doubles as the
          int       0x21                ;   address of the font!
          mov       dx, eis             ; "GRAFTABL installed"
          call      wrstr
          mov       dx, einstall
          call      wrstr
          mov       dx, eactive         ; Display new codepage.
          call      wrstr
          mov       ax, [codepage]
          call      wrnum
          mov       dx, ecrlf
          call      wrstr
          mov       es, [0x002C]        ; Free up the environment for a little
          mov       ah, 0x49            ;   memory boost
          int       0x21
          xor       bx, bx              ; (Suggested by C. Masloch -
          mov       cx, word [0x0032]   ;  close all allocated handles)
.21:      mov       ah, 0x3E
          int       0x21
          inc       bx
          loop      .21
          mov       dx, trans           ; Allow everything preceding the
          add       dx, 0x000F          ;   transient portion of GRAFTABL to
          mov       cl, 4               ;   remain resident. (Rounded up to
          shr       dx, cl              ;   the next paragraph, because MS-DOS
          mov       ax, 0x3100          ;   wants the size in paragraphs.)
          int       0x21                ; TSR EXIT CODE 0

; We found another GRAFTABL.
;
; Copy our data to the existing instance, instead of to our own, then return 1
; (existing codepage table updated).

.22:      mov       ax, 0xB001          ; So where is it?
          mov       bx, whence          ; DS:BX gets this.
          int       0x2F
          call      movcp
          mov       dx, eupdated        ; Display old codepage.
          call      wrstr
          mov       ax, [oldcp]
          call      wrnum
          mov       dx, ecrlf
          call      wrstr
          mov       dx, eactive         ; Display new codepage.
          call      wrstr
          mov       ax, [codepage]
          call      wrnum
          mov       dx, ecrlf
          call      wrstr
          mov       ax, 0x4C01
          int       0x21                ; EXIT CODE 1

; ============================================================================
; COMMON FUNCTIONS
; ============================================================================

; Copy the codepage to the desired location, be it in our memory image, or
; that of another implementation of GRAFTABL.
;
; Input: [codepage]=number of requested codepage.
;        [cpptr]=NEAR pointer to source codepage table.
;        [whence]=FAR pointer to target codepage table.
;
; Output: If applicable, returns the previous codepage number in [oldcp].

movcp:    mov       ax, [codepage]      ; Copy codepage after charset buffer.
          mov       di, [whence]
          mov       ds, [whence+2]
          mov       bx, 0x0400
          mov       cx, [bx+di]
          mov       cs:[oldcp], cx
          mov       [bx+di], ax
          mov       si, [cpptr]         ; Repurpose the offset and copy the
.1:       mov       ah, cs:[si]         ;   actual data to the buffer.
          mov       [di], ah
          inc       si
          inc       di
          dec       bx
          jnz       .1
          push      cs                  ; Reset DS.
          pop       ds
          ret                           ; We're outtie.

; Kill whitespace (used by the command parser).
;
; Input: SI=pointer to character in the command line currently being scanned.

killspc:  cmp       byte [si], ' '      ; Keep pushing SI as long as it points
          je        .1                  ; to whitespace (space or tab), and is
          cmp       byte [si], 0x09     ; not out of the command line area.
          jne       .2
.1:       inc       si
          cmp       si, 0x0100
          jb        killspc
.2:       ret

; Smash the case of AH.  Used mainly in the switch parser.
;
; Input: AH=letter to check

smash:    cmp       ah, 'a'             ; Smash lowercase to uppercase.
          jb        .1
          cmp       ah, 'z'
          ja        .1
          and       ah, 0x5F
.1:       ret

; Write number in decimal format.
;
; The "wrstrc" function to output a C string is only used by wrnum, but as
; that function does need it, it is here included.
;
; Input: AX=number to output.

wrnum:    mov       byte [numbuf+6], 0  ; Recycle the end of linbuf2.
          mov       di, numbuf+5        ; (Only does an unsigned word.
.1:       xor       dx, dx              ;  Output will be a C string.)
          mov       bx, 10              ; DECIMAL
          div       bx                  ; AX=(DX:AX)/BX; DX=(DX:AX)%BX
          add       dl, '0'             ; Convert remainder to ASCII
          mov       [di], dl            ; Write it into buffer
          dec       di                  ; Step down
          or        ax, ax              ; Anything left?
          jnz       .1                  ; Yes, so keep going.
          mov       dx, di
          inc       dx                  ; FALL INTO
wrstrc:   push      di
          mov       di, dx
.1:       mov       ah, 0x02            ; PUTCHAR
          mov       dl, [di]
          or        dl, dl              ; Null terminator?
          jz        .2                  ; Yes, restore di and exit
          int       0x21
          inc       di
          jmp short .1
.2:       pop       di
          ret

; Write string through DOS function 9; a simple space optimization since it is
; used so frequently.
;
; Input: DX=string, terminated by $

wrstr:    mov       ah, 0x09            ; PUTSTR
          int       0x21
          ret

; ============================================================================
; BSS
; ============================================================================

; Usually I place BSS at the end of the image and implement it via equates,
; but it's only 16 bytes, so it won't make that much of a difference.
;
; Besides, placing BSS after the codepage data seems wrong, somehow.

codepage: dw        0x0000
cpptr:    dw        0x0000
oldcp:    dw        0x0000
whence:   dd        0x00000000
numbuf:   db        "00000", 0

; ============================================================================
; MESSAGES/TEXT
; ============================================================================

; Errors.
;
; Note that "Invalid switch" does NOT contain a newline.
; Any arbitrary newline plus terminator is adequate as a place to put "ecrlf".

edos1:    db        "Incorrect DOS version", 13, 10, "$"
esyn:     db        "Invalid parameter", 13, 10, "$"
eswitch:  db        "Invalid switch - /$"
ecp:      db        "Invalid code page" ; FALL INTO
ecrlf:    db        13, 10, "$"

; Informational messages and message fragments.
;
; Note that "eold" is not accessed directly, but only via fallthrough from
; "eupdated".

%ifdef    HELP
ehelp:    db        "Enables DOS to display an extended character set in CGA graphics mode.", 13, 10, 13, 10
          db        "GRAFTABL [xxx]", 13, 10
          db        "GRAFTABL /STATUS", 13, 10, 13, 10
          db        "  xxx      Specifies a code page number.", 13, 10
          db        "  /STATUS  Displays the current code page selected for use with GRAFTABL.", 13, 10, "$"
%endif
enope:    db        "Not installing GRAFTABL.", 13, 10, "$"
eis:      db        "GRAFTABL is $"
enot:     db        "NOT "                        ; FALL INTO
einstall: db        "installed.", 13, 10, "$"
eupdated: db        "Code page updated.", 13, 10  ; FALL INTO
eold:     db        "Previous code page was: $"
eactive:  db        "Active code page is: $"

; The significant portion of the /STATUS switch.

mstatus:  db        "STA", 0

; ============================================================================
; GRAFTABL CODEPAGE DATA
; ============================================================================

; Each codepage is stored as follows:
;
;   * cptab contains a list of valid codepages.
;     Each is stored "dw cpnumber, cppointer".  The last one should have a
;     codepage of 0.
;   * Each pointer points to a 1K buffer containing the upper half ($80-FF) of
;     the appropriate character set.
;
; We support the MS-DOS 5/6 stock codepages:
;
;   * 437 - United States
;   * 850 - Western Europe/Latin 1
;   * 852 - Central Europe/Latin 2
;   * 860 - Portuguese
;   * 863 - Canadian French
;   * 865 - Nordic
;
; Each character is depicted by 8 bytes of data, one per scanline.
;
; CP437 is stored up at 0100, except for the first three bytes, which are
; patched in at label okdos.14

cptab:    dw        437, CP437
          dw        850, CP850
          dw        852, CP852
          dw        860, CP860
          dw        863, CP863
          dw        865, CP865
          dw        0,   0x0000

CP850:    db        0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x0C, 0x78
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x00, 0x00, 0x7E, 0xC0, 0xC0, 0x7E, 0x0C, 0x38
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0xC6, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x38, 0x6C, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x18, 0x30, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db       	0x00, 0x00, 0x7E, 0x12, 0xFE, 0x90, 0xFE, 0x00
          db        0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x60, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0xFC
          db        0xC6, 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x00, 0x02, 0x7C, 0xCE, 0xD6, 0xE6, 0x7C, 0x80
          db        0x38, 0x6C, 0x64, 0xF0, 0x60, 0x66, 0xFC, 0x00
          db        0x3A, 0x6C, 0xCE, 0xD6, 0xE6, 0x6C, 0xB8, 0x00
          db        0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00, 0x00
          db        0x0E, 0x1B, 0x18, 0x3C, 0x18, 0xD8, 0x70, 0x00
          db        0x18, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x76, 0xDC, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x00
          db        0x76, 0xDC, 0x00, 0xE6, 0xF6, 0xDE, 0xCE, 0x00
          db        0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00
          db        0x18, 0x00, 0x18, 0x18, 0x30, 0x63, 0x3E, 0x00
          db        0x7E, 0x81, 0xB9, 0xA5, 0xB9, 0xA5, 0x81, 0x7E
          db        0x00, 0x00, 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00
          db        0x63, 0xE6, 0x6C, 0x7E, 0x33, 0x66, 0xCC, 0x0F
          db        0x63, 0xE6, 0x6C, 0x7A, 0x36, 0x6A, 0xDF, 0x06
          db        0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x30, 0x60, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x18, 0x0C, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x7E, 0x81, 0x9D, 0xA1, 0xA1, 0x9D, 0x81, 0x7E
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18
          db        0x66, 0x66, 0x3C, 0x7E, 0x18, 0x7E, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x76, 0xDC, 0x7C, 0x06, 0x7E, 0xC6, 0x7E, 0x00
          db        0x76, 0xDC, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x00, 0xC6, 0x7C, 0xC6, 0xC6, 0x7C, 0xC6, 0x00
          db        0x30, 0x7E, 0x0C, 0x7C, 0xCC, 0xCC, 0x78, 0x00
          db        0xF8, 0x6C, 0x66, 0xF6, 0x66, 0x6C, 0xF8, 0x00
          db        0x7C, 0x82, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0xC6, 0x00, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0x30, 0x18, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0x00, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x0C, 0x18, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x3C, 0x42, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x66, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18
          db        0x30, 0x18, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x30, 0x60, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x78, 0xCC, 0xCC, 0xD8, 0xCC, 0xC6, 0xCC, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x0C, 0x06, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x76, 0xDC, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x76, 0xDC, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0xC0
          db        0xE0, 0x60, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0xF0
          db        0xF0, 0x60, 0x7C, 0x66, 0x7C, 0x60, 0xF0, 0x00
          db        0x18, 0x30, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x7C, 0x82, 0x00, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x60, 0x30, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0xFC
          db        0x0C, 0x18, 0x66, 0x66, 0x3C, 0x18, 0x3C, 0x00
          db        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF
          db        0xE1, 0x32, 0xE4, 0x3A, 0xF6, 0x2A, 0x5F, 0x86
          db        0x7F, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00
          db        0x3E, 0x61, 0x3C, 0x66, 0x66, 0x3C, 0x86, 0x7C
          db        0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0C, 0x38
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
          db        0x18, 0x38, 0x18, 0x18, 0x3C, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x38, 0x0C, 0x78, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x18, 0x30, 0x7C, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

CP852:    db        0x3C, 0x66, 0xC0, 0xC0, 0x66, 0x3C, 0x0C, 0x38
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x18, 0x30, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00
          db        0x78, 0x84, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0xCC, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00
          db        0x30, 0xCC, 0x30, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x18, 0x30, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00
          db        0x00, 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x18
          db        0x30, 0x36, 0x3C, 0x38, 0x30, 0x70, 0xDC, 0x00
          db        0xCC, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00
          db        0x66, 0xCC, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x00, 0x66, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00
          db        0x70, 0x88, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00
          db        0x0C, 0x18, 0xFE, 0x0C, 0x30, 0x60, 0xFE, 0x00
          db        0xC6, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x00
          db        0x0C, 0x18, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00
          db        0xCC, 0xD8, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x00
          db        0xCC, 0xD8, 0xC0, 0xC0, 0xC0, 0xC0, 0x78, 0x00
          db        0x78, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00
          db        0xCC, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00
          db        0xF6, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0x00
          db        0xF6, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0x78, 0x00
          db        0x0C, 0x18, 0x7E, 0xC0, 0x7C, 0x06, 0xFC, 0x00
          db        0x0C, 0x18, 0x3E, 0x60, 0x3C, 0x06, 0x7C, 0x00
          db        0xC6, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xCC, 0x78, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x00
          db        0xCC, 0x78, 0x30, 0xFC, 0x30, 0x30, 0x1E, 0x00
          db        0x60, 0x6C, 0x78, 0x70, 0x60, 0xE0, 0x7E, 0x00
          db        0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00, 0x00
          db        0x66, 0x3C, 0x3C, 0x66, 0x60, 0x66, 0x3C, 0x00
          db        0x0C, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00
          db        0x0C, 0x18, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x00, 0x0C, 0x18, 0x78, 0xCC, 0xCC, 0x78, 0x00
          db        0x00, 0x18, 0x30, 0xCC, 0xCC, 0xCC, 0x7E, 0x00
          db        0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xD6, 0x18, 0x0E
          db        0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x0F
          db        0x66, 0x3C, 0xFE, 0x0C, 0x18, 0x60, 0xFE, 0x00
          db        0x66, 0x3C, 0x00, 0x7E, 0x0C, 0x30, 0x7E, 0x00
          db        0xFE, 0xC0, 0xC0, 0xF8, 0xC0, 0xC0, 0xFE, 0x1C
          db        0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x1C
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x0C, 0x18, 0x00, 0x7E, 0x0C, 0x30, 0x7E, 0x00
          db        0x66, 0x3C, 0x7C, 0xC6, 0xC0, 0xC6, 0x7C, 0x00
          db        0x00, 0x00, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x38
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0xDB, 0x77, 0xDB, 0xEE, 0xDB, 0x77, 0xDB, 0xEE
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0xCC, 0x78, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x78, 0xCC, 0x60, 0x30, 0x18, 0xCC, 0x78, 0x30
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0xFE, 0xC6, 0x0C, 0x30, 0xC6, 0xFE, 0x00
          db        0x00, 0x18, 0x00, 0x7C, 0x18, 0x30, 0x7C, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0xC6, 0x7C, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0xCC, 0x78, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x00, 0x42, 0x3C, 0x66, 0x66, 0x3C, 0x42, 0x00
          db        0x0C, 0x3E, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00
          db        0x7C, 0x66, 0x66, 0xF6, 0x66, 0x66, 0x7C, 0x00
          db        0xCC, 0x78, 0xFC, 0x66, 0x66, 0x66, 0xFC, 0x00
          db        0xCC, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00
          db        0x96, 0x66, 0x06, 0x7E, 0xC6, 0xC6, 0x7E, 0x00
          db        0x24, 0x18, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0x00
          db        0x18, 0x30, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00
          db        0x78, 0x84, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00
          db        0xCC, 0x78, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x20, 0x38
          db        0x10, 0x28, 0xD6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x00, 0x78, 0xCC, 0xF8, 0xCC, 0xF8, 0xC0, 0xC0
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x0C, 0x18, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0x00
          db        0x0C, 0x18, 0xDC, 0xE6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x66, 0x3C, 0xDC, 0xE6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x6C, 0x38, 0x7E, 0xE0, 0x38, 0x0E, 0xFC, 0x00
          db        0x6C, 0x38, 0x7C, 0x40, 0x38, 0x04, 0x7C, 0x00
          db        0x0C, 0x18, 0xFC, 0xC6, 0xFC, 0xD8, 0xCC, 0x00
          db        0x0C, 0x18, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCE, 0xF0, 0xE0, 0xC0, 0xC0, 0x00
          db        0x66, 0xCC, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x0C, 0x18, 0xC6, 0xC6, 0x66, 0x3E, 0x0C, 0x78
          db        0x0C, 0xDE, 0xC6, 0x66, 0x3C, 0x18, 0x30, 0x00
          db        0x30, 0x78, 0x30, 0x30, 0x30, 0x38, 0x18, 0x1E
          db        0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00
          db        0x66, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x1C
          db        0xD8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0xC6, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x3C, 0x66, 0x38, 0x6C, 0x6C, 0x38, 0xCC, 0x78
          db        0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x1C
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x66, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0xD8, 0x70, 0xFC, 0xC6, 0xFC, 0xD8, 0xCC, 0x00
          db        0xD8, 0x70, 0xCE, 0xD8, 0xE0, 0xC0, 0xC0, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

CP860:    db        0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x0C, 0x78
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x76, 0xDC, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x60, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x00, 0x00, 0x7E, 0xC0, 0xC0, 0x7E, 0x0C, 0x38
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x0C, 0x18, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0x76, 0xDC, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x18, 0x30, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x60, 0x30, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x30, 0x18, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x76, 0xDC, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x0C, 0x18, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x60, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x30, 0x18, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x76, 0xDC, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18
          db        0x38, 0x6C, 0x64, 0xF0, 0x60, 0x66, 0xFC, 0x00
          db        0x30, 0x18, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC7
          db        0x0C, 0x18, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x18, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x76, 0xDC, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x00
          db        0x76, 0xDC, 0x00, 0xE6, 0xF6, 0xDE, 0xCE, 0x00
          db        0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00
          db        0x18, 0x00, 0x18, 0x18, 0x30, 0x63, 0x3E, 0x00
          db        0x30, 0x18, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00
          db        0x63, 0xE6, 0x6C, 0x7E, 0x33, 0x66, 0xCC, 0x0F
          db        0x63, 0xE6, 0x6C, 0x7A, 0x36, 0x6A, 0xDF, 0x06
          db        0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
          db        0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00
          db        0x78, 0xCC, 0xCC, 0xD8, 0xCC, 0xC6, 0xCC, 0x00
          db        0xFE, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00
          db        0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00
          db        0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00
          db        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0xC0
          db        0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x00
          db        0x7E, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x7E
          db        0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00
          db        0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00
          db        0x0E, 0x18, 0x0C, 0x3E, 0x66, 0x66, 0x3C, 0x00
          db        0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00
          db        0x06, 0x0C, 0x7E, 0xDB, 0xDB, 0x7E, 0x60, 0xC0
          db        0x1E, 0x30, 0x60, 0x7E, 0x60, 0x30, 0x1E, 0x00
          db        0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00
          db        0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00
          db        0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00
          db        0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70
          db        0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00
          db        0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
          db        0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C
          db        0x6C, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x18, 0x30, 0x7C, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

CP863:    db        0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x0C, 0x78
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x30, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x7F, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00
          db        0x00, 0x00, 0x7E, 0xC0, 0xC0, 0x7E, 0x0C, 0x38
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF
          db        0x18, 0x0C, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00
          db        0x3E, 0x61, 0x3C, 0x66, 0x66, 0x3C, 0x86, 0x7C
          db        0x18, 0x30, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x30, 0x18, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0x38, 0x44, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xC6, 0x00, 0xFE, 0xC0, 0xFC, 0xC0, 0xFE, 0x00
          db        0x66, 0x00, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x60, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x00, 0xC6, 0x7C, 0xC6, 0xC6, 0x7C, 0xC6, 0x00
          db        0x7C, 0x82, 0x38, 0x6C, 0xC6, 0x6C, 0x38, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18
          db        0x38, 0x6C, 0x64, 0xF0, 0x60, 0x66, 0xFC, 0x00
          db        0x60, 0x30, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x7C, 0x82, 0x00, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x0E, 0x1B, 0x18, 0x3C, 0x18, 0xD8, 0x70, 0x00
          db        0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18
          db        0x0C, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0C, 0x78
          db        0x78, 0x0C, 0x38, 0x0C, 0x78, 0x00, 0x00, 0x00
          db        0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          db        0x7E, 0x81, 0x3C, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00
          db        0x63, 0xE6, 0x6C, 0x7E, 0x33, 0x66, 0xCC, 0x0F
          db        0x63, 0xE6, 0x6C, 0x7A, 0x36, 0x6A, 0xDF, 0x06
          db        0xE1, 0x32, 0x64, 0x3A, 0xF6, 0x2A, 0x5F, 0x82
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
          db        0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00
          db        0x78, 0xCC, 0xCC, 0xD8, 0xCC, 0xC6, 0xCC, 0x00
          db        0xFE, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00
          db        0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00
          db        0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00
          db        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0xC0
          db        0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x00
          db        0x7E, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x7E
          db        0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00
          db        0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00
          db        0x0E, 0x18, 0x0C, 0x3E, 0x66, 0x66, 0x3C, 0x00
          db        0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00
          db        0x06, 0x0C, 0x7E, 0xDB, 0xDB, 0x7E, 0x60, 0xC0
          db        0x1E, 0x30, 0x60, 0x7E, 0x60, 0x30, 0x1E, 0x00
          db        0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00
          db        0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00
          db        0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00
          db        0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70
          db        0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00
          db        0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
          db        0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C
          db        0x6C, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x18, 0x30, 0x7C, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

CP865:    db        0x7C, 0xC6, 0xC0, 0xC0, 0xC6, 0x7C, 0x0C, 0x78
          db        0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x7C, 0x82, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x18, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x00, 0x00, 0x7E, 0xC0, 0xC0, 0x7E, 0x0C, 0x38
          db        0x7C, 0x82, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C, 0x00
          db        0x66, 0x00, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x7C, 0x82, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00
          db        0x30, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0xC6, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x38, 0x6C, 0x7C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00
          db        0x18, 0x30, 0xFE, 0xC0, 0xF8, 0xC0, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0x12, 0xFE, 0x90, 0xFE, 0x00
          db        0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00
          db        0x7C, 0x82, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0xC6, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x30, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x60, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0xFC
          db        0xC6, 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x00
          db        0xC6, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x00, 0x02, 0x7C, 0xCE, 0xD6, 0xE6, 0x7C, 0x80
          db        0x38, 0x6C, 0x64, 0xF0, 0x60, 0x66, 0xFC, 0x00
          db        0x3A, 0x6C, 0xCE, 0xD6, 0xE6, 0x6C, 0xB8, 0x00
          db        0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC7
          db        0x0E, 0x1B, 0x18, 0x3C, 0x18, 0xD8, 0x70, 0x00
          db        0x18, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00
          db        0x0C, 0x18, 0x00, 0x38, 0x18, 0x18, 0x3C, 0x00
          db        0x0C, 0x18, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C, 0x00
          db        0x18, 0x30, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00
          db        0x76, 0xDC, 0x00, 0xDC, 0x66, 0x66, 0x66, 0x00
          db        0x76, 0xDC, 0x00, 0xE6, 0xF6, 0xDE, 0xCE, 0x00
          db        0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00, 0x00
          db        0x18, 0x00, 0x18, 0x18, 0x30, 0x63, 0x3E, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0xC0, 0xC0, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00
          db        0x63, 0xE6, 0x6C, 0x7E, 0x33, 0x66, 0xCC, 0x0F
          db        0x63, 0xE6, 0x6C, 0x7A, 0x36, 0x6A, 0xDF, 0x06
          db        0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18, 0x00
          db        0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00
          db        0x00, 0xC6, 0x7C, 0xC6, 0xC6, 0x7C, 0xC6, 0x00
          db        0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88
          db        0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA
          db        0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00
          db        0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18
          db        0x00, 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36
          db        0x36, 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36
          db        0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18
          db        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
          db        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF
          db        0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0
          db        0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F
          db        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00
          db        0x78, 0xCC, 0xCC, 0xD8, 0xCC, 0xC6, 0xCC, 0x00
          db        0xFE, 0xC6, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00
          db        0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00
          db        0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE, 0x00
          db        0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00
          db        0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x7C, 0xC0
          db        0x00, 0x76, 0xDC, 0x18, 0x18, 0x18, 0x18, 0x00
          db        0x7E, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x7E
          db        0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00
          db        0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00
          db        0x0E, 0x18, 0x0C, 0x3E, 0x66, 0x66, 0x3C, 0x00
          db        0x00, 0x00, 0x7E, 0xDB, 0xDB, 0x7E, 0x00, 0x00
          db        0x06, 0x0C, 0x7E, 0xDB, 0xDB, 0x7E, 0x60, 0xC0
          db        0x1E, 0x30, 0x60, 0x7E, 0x60, 0x30, 0x1E, 0x00
          db        0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x00
          db        0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00
          db        0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00
          db        0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00
          db        0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00
          db        0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18
          db        0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70
          db        0x00, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x00, 0x00
          db        0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00
          db        0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00
          db        0x0F, 0x0C, 0x0C, 0x0C, 0xEC, 0x6C, 0x3C, 0x1C
          db        0x6C, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00
          db        0x78, 0x0C, 0x18, 0x30, 0x7C, 0x00, 0x00, 0x00
          db        0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00
          db        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
